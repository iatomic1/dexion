// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package repository

import (
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type TelegramUser struct {
	ChatID    string             `json:"chatId"`
	Username  *string            `json:"username"`
	CreatedAt pgtype.Timestamptz `json:"createdAt"`
}

type TelegramUserWallet struct {
	ChatID        string             `json:"chatId"`
	WalletAddress string             `json:"walletAddress"`
	Nickname      string             `json:"nickname"`
	CreatedAt     pgtype.Timestamptz `json:"createdAt"`
}

type User struct {
	ID               string             `json:"id"`
	Name             *string            `json:"name"`
	Email            *string            `json:"email"`
	EmailVerified    bool               `json:"emailVerified"`
	Image            *string            `json:"image"`
	InviteCode       *string            `json:"inviteCode"`
	SubOrgID         *string            `json:"subOrgId"`
	WalletID         *string            `json:"walletId"`
	WalletAddress    *string            `json:"walletAddress"`
	WalletPublicKey  *string            `json:"walletPublicKey"`
	CreatedAt        pgtype.Timestamptz `json:"createdAt"`
	SubOrgCreated    *bool              `json:"subOrgCreated"`
	UpdatedAt        pgtype.Timestamptz `json:"updatedAt"`
	TwoFactorEnabled *bool              `json:"twoFactorEnabled"`
}

type UserWallet struct {
	UserID        string    `json:"userId"`
	WalletAddress string    `binding:"required" example:"SP1Y5YSTAHZ88XYK1VPDH24GY0HPX5J4JECTMY4A1" json:"walletAddress"`
	Nickname      string    `binding:"required" example:"iatomic" json:"nickname"`
	Emoji         *string   `json:"emoji"`
	Notifications bool      `json:"notifications"`
	CreatedAt     time.Time `json:"createdAt"`
	UpdatedAt     time.Time `json:"updatedAt"`
}

type Wallet struct {
	Address   string             `binding:"required" example:"SP1Y5YSTAHZ88XYK1VPDH24GY0HPX5J4JECTMY4A1" json:"address"`
	CreatedAt pgtype.Timestamptz `json:"createdAt"`
}

type Watchlist struct {
	ID        uuid.UUID `json:"id"`
	Ca        string    `binding:"required" example:"SP1Y5YSTAHZ88XYK1VPDH24GY0HPX5J4JECTMY4A1.velar-token" json:"ca"`
	UserID    *string   `json:"userId"`
	UpdatedAt time.Time `json:"updatedAt"`
	CreatedAt time.Time `json:"createdAt"`
}
