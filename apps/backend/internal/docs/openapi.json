{
    "openapi": "3.0.0",
    "info": {
        "description": "API for Dexion",
        "title": "DEXION API",
        "contact": {
            "name": "Atomic",
            "url": "https://github.com/iatomic1",
            "email": "atomic.k.2739@gmail.com"
        },
        "version": "1.0"
    },
    "paths": {
        "/wallets": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve all wallets tracked by the user",
                "tags": [
                    "Wallets"
                ],
                "summary": "Get tracked wallets",
                "responses": {
                    "200": {
                        "description": "Wallets retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/backend_api_http.Response"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/backend_internal_db_repository.GetUserTrackedWalletsRow"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/backend_api_http.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a wallet to user's tracking list",
                "tags": [
                    "Wallets"
                ],
                "summary": "Track a new wallet",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/backend_internal_db_repository.UpsertUserWalletParams"
                            }
                        }
                    },
                    "description": "Wallet tracking data",
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Wallet tracked successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/backend_api_http.Response"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/backend_internal_db_repository.UserWallet"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Wallet already tracked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/backend_api_http.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wallets/all": {
            "get": {
                "description": "Retrieve all wallets in the system",
                "tags": [
                    "Wallets"
                ],
                "summary": "Get all wallets",
                "responses": {
                    "200": {
                        "description": "All wallets retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/backend_api_http.Response"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/backend_internal_db_repository.Wallet"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/backend_api_http.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wallets/telegram": {
            "post": {
                "description": "Add a wallet to a telegram user's tracking list",
                "tags": [
                    "WalletsTelegram"
                ],
                "summary": "Track a new wallet for a telegram user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/backend_internal_db_repository.UpsertTelegramUserWalletParams"
                            }
                        }
                    },
                    "description": "Wallet tracking data",
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Wallet tracked successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/backend_api_http.Response"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/backend_internal_db_repository.TelegramUserWallet"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Wallet already tracked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/backend_api_http.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wallets/telegram/users": {
            "post": {
                "description": "Creates a new telegram user or updates an existing one's information",
                "tags": [
                    "WalletsTelegram"
                ],
                "summary": "Create or update a telegram user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/backend_internal_db_repository.CreateTelegramUserParams"
                            }
                        }
                    },
                    "description": "User creation/update data",
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "User created or updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/backend_api_http.Response"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/backend_internal_db_repository.TelegramUser"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/backend_api_http.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wallets/telegram/{chat_id}": {
            "get": {
                "description": "Retrieve all wallets tracked by a telegram user",
                "tags": [
                    "WalletsTelegram"
                ],
                "summary": "Get tracked wallets for a telegram user",
                "parameters": [
                    {
                        "description": "Telegram Chat ID",
                        "name": "chat_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Wallets retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/backend_api_http.Response"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/backend_internal_db_repository.GetTrackedWalletsTelegramRow"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid chat ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/backend_api_http.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wallets/telegram/{chat_id}/{address}": {
            "delete": {
                "description": "Remove a wallet from a telegram user's tracking list",
                "tags": [
                    "WalletsTelegram"
                ],
                "summary": "Untrack wallet for a telegram user",
                "parameters": [
                    {
                        "description": "Telegram Chat ID",
                        "name": "chat_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Wallet Address",
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Wallet untracked"
                    },
                    "400": {
                        "description": "Invalid chat ID or address",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Wallet not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/backend_api_http.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wallets/{address}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove a wallet from user's tracking list",
                "tags": [
                    "Wallets"
                ],
                "summary": "Untrack wallet",
                "parameters": [
                    {
                        "description": "Wallet address",
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Wallet untracked"
                    },
                    "404": {
                        "description": "Wallet not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/backend_api_http.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update nickname or emoji for a tracked wallet",
                "tags": [
                    "Wallets"
                ],
                "summary": "Update wallet preferences",
                "parameters": [
                    {
                        "description": "Wallet address",
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/backend_internal_db_repository.UpdateWalletPreferencesParams"
                            }
                        }
                    },
                    "description": "Update data",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Preferences updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/backend_api_http.Response"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/backend_internal_db_repository.UserWallet"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Wallet not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/backend_api_http.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wallets/{address}/watchers": {
            "get": {
                "description": "Retrieve all wallets in the system",
                "tags": [
                    "Wallets"
                ],
                "summary": "Get all wallets",
                "responses": {
                    "200": {
                        "description": "All wallets retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/backend_api_http.Response"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/backend_internal_db_repository.Wallet"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/backend_api_http.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/watchlist": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve all watchlist entries for the authenticated user",
                "tags": [
                    "Watchlist"
                ],
                "summary": "Get user's watchlist",
                "responses": {
                    "200": {
                        "description": "User watchlist retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/backend_api_http.Response"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/backend_internal_db_repository.Watchlist"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/backend_api_http.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a contract address to user's watchlist",
                "tags": [
                    "Watchlist"
                ],
                "summary": "Create a new watchlist entry",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/backend_internal_db_repository.CreateWatchlistParams"
                            }
                        }
                    },
                    "description": "Watchlist data",
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Watchlist created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/components/schemas/backend_api_http.Response"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "$ref": "#/components/schemas/backend_internal_db_repository.Watchlist"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Contract already in watchlist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/backend_api_http.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/watchlist/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a specific watchlist entry by ID",
                "tags": [
                    "Watchlist"
                ],
                "summary": "Delete watchlist entry",
                "parameters": [
                    {
                        "description": "Watchlist ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Watchlist entry deleted successfully",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/backend_api_http.Response"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Watchlist entry not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/backend_api_http.InternalServerErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "description": "Authentication endpoints",
            "name": "Auth"
        }
    ],
    "servers": [
        {
            "url": "http://localhost:8080/api/v1"
        },
        {
            "url": "https://localhost:8080/api/v1"
        }
    ],
    "components": {
        "securitySchemes": {
            "AccessTokenBearer": {
                "description": "AccessTokenBearer Authentication",
                "type": "apiKey",
                "name": "Authorization",
                "in": "header"
            },
            "RefreshTokenBearer": {
                "description": "RefreshTokenBearer Authentication",
                "type": "apiKey",
                "name": "Authorization",
                "in": "header"
            },
            "Google_OAuth2": {
                "type": "oauth2",
                "flows": {
                    "authorizationCode": {
                        "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
                        "tokenUrl": "https://oauth2.googleapis.com/token",
                        "scopes": {
                            "email": "Grants access to user's email",
                            "profile": "Grants access to user's basic profile info"
                        }
                    }
                }
            }
        },
        "schemas": {
            "backend_api_http.InternalServerErrorResponse": {
                "type": "object",
                "properties": {
                    "errors": {},
                    "message": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "example": "Internal Server Error"
                    }
                }
            },
            "backend_api_http.Response": {
                "type": "object",
                "properties": {
                    "data": {},
                    "errors": {},
                    "message": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                }
            },
            "backend_internal_db_repository.CreateTelegramUserParams": {
                "type": "object",
                "properties": {
                    "chatId": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                }
            },
            "backend_internal_db_repository.CreateWatchlistParams": {
                "type": "object",
                "required": [
                    "ca"
                ],
                "properties": {
                    "ca": {
                        "type": "string",
                        "example": "SP1Y5YSTAHZ88XYK1VPDH24GY0HPX5J4JECTMY4A1.velar-token"
                    },
                    "userId": {
                        "type": "string"
                    }
                }
            },
            "backend_internal_db_repository.GetTrackedWalletsTelegramRow": {
                "type": "object",
                "required": [
                    "address"
                ],
                "properties": {
                    "address": {
                        "type": "string",
                        "example": "SP1Y5YSTAHZ88XYK1VPDH24GY0HPX5J4JECTMY4A1"
                    },
                    "createdAt": {
                        "$ref": "#/components/schemas/pgtype.Timestamptz"
                    },
                    "nickname": {
                        "type": "string"
                    }
                }
            },
            "backend_internal_db_repository.GetUserTrackedWalletsRow": {
                "type": "object",
                "required": [
                    "address",
                    "nickname"
                ],
                "properties": {
                    "address": {
                        "type": "string",
                        "example": "SP1Y5YSTAHZ88XYK1VPDH24GY0HPX5J4JECTMY4A1"
                    },
                    "createdAt": {
                        "$ref": "#/components/schemas/pgtype.Timestamptz"
                    },
                    "emoji": {
                        "type": "string"
                    },
                    "nickname": {
                        "type": "string",
                        "example": "iatomic"
                    },
                    "notifications": {
                        "type": "boolean"
                    }
                }
            },
            "backend_internal_db_repository.TelegramUser": {
                "type": "object",
                "properties": {
                    "chatId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "$ref": "#/components/schemas/pgtype.Timestamptz"
                    },
                    "username": {
                        "type": "string"
                    }
                }
            },
            "backend_internal_db_repository.TelegramUserWallet": {
                "type": "object",
                "properties": {
                    "chatId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "$ref": "#/components/schemas/pgtype.Timestamptz"
                    },
                    "nickname": {
                        "type": "string"
                    },
                    "walletAddress": {
                        "type": "string"
                    }
                }
            },
            "backend_internal_db_repository.UpdateWalletPreferencesParams": {
                "type": "object",
                "required": [
                    "nickname",
                    "walletAddress"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "nickname": {
                        "type": "string",
                        "example": "iatomic"
                    },
                    "notifications": {
                        "type": "boolean"
                    },
                    "walletAddress": {
                        "type": "string",
                        "example": "SP1Y5YSTAHZ88XYK1VPDH24GY0HPX5J4JECTMY4A1"
                    }
                }
            },
            "backend_internal_db_repository.UpsertTelegramUserWalletParams": {
                "type": "object",
                "properties": {
                    "chatId": {
                        "type": "string"
                    },
                    "nickname": {
                        "type": "string"
                    },
                    "walletAddress": {
                        "type": "string"
                    }
                }
            },
            "backend_internal_db_repository.UpsertUserWalletParams": {
                "type": "object",
                "required": [
                    "nickname",
                    "walletAddress"
                ],
                "properties": {
                    "emoji": {
                        "type": "string"
                    },
                    "nickname": {
                        "type": "string",
                        "example": "iatomic"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "walletAddress": {
                        "type": "string",
                        "example": "SP1Y5YSTAHZ88XYK1VPDH24GY0HPX5J4JECTMY4A1"
                    }
                }
            },
            "backend_internal_db_repository.UserWallet": {
                "type": "object",
                "required": [
                    "nickname",
                    "walletAddress"
                ],
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "emoji": {
                        "type": "string"
                    },
                    "nickname": {
                        "type": "string",
                        "example": "iatomic"
                    },
                    "notifications": {
                        "type": "boolean"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "walletAddress": {
                        "type": "string",
                        "example": "SP1Y5YSTAHZ88XYK1VPDH24GY0HPX5J4JECTMY4A1"
                    }
                }
            },
            "backend_internal_db_repository.Wallet": {
                "type": "object",
                "required": [
                    "address"
                ],
                "properties": {
                    "address": {
                        "type": "string",
                        "example": "SP1Y5YSTAHZ88XYK1VPDH24GY0HPX5J4JECTMY4A1"
                    },
                    "createdAt": {
                        "$ref": "#/components/schemas/pgtype.Timestamptz"
                    }
                }
            },
            "backend_internal_db_repository.Watchlist": {
                "type": "object",
                "required": [
                    "ca"
                ],
                "properties": {
                    "ca": {
                        "type": "string",
                        "example": "SP1Y5YSTAHZ88XYK1VPDH24GY0HPX5J4JECTMY4A1.velar-token"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    }
                }
            },
            "pgtype.InfinityModifier": {
                "type": "integer",
                "enum": [
                    1,
                    0,
                    -1
                ],
                "x-enum-varnames": [
                    "Infinity",
                    "Finite",
                    "NegativeInfinity"
                ]
            },
            "pgtype.Timestamptz": {
                "type": "object",
                "properties": {
                    "infinityModifier": {
                        "$ref": "#/components/schemas/pgtype.InfinityModifier"
                    },
                    "time": {
                        "type": "string"
                    },
                    "valid": {
                        "type": "boolean"
                    }
                }
            }
        }
    }
}
