// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package repository

import (
	"context"
)

type Querier interface {
	CleanupOrphanedWallet(ctx context.Context, address string) error
	CreateTelegramUser(ctx context.Context, arg CreateTelegramUserParams) (*TelegramUser, error)
	CreateWallet(ctx context.Context, address string) (*CreateWalletRow, error)
	CreateWatchlist(ctx context.Context, arg CreateWatchlistParams) (*Watchlist, error)
	DeleteWatchlist(ctx context.Context, arg DeleteWatchlistParams) error
	GetAllWallets(ctx context.Context) ([]*Wallet, error)
	GetAllWalletsAndWatchers(ctx context.Context) ([]*GetAllWalletsAndWatchersRow, error)
	GetTelegramUser(ctx context.Context, chatID string) (*TelegramUser, error)
	GetTrackedWalletsTelegram(ctx context.Context, chatID string) ([]*GetTrackedWalletsTelegramRow, error)
	GetUserByEmail(ctx context.Context, email *string) (*User, error)
	GetUserById(ctx context.Context, id string) (*User, error)
	GetUserTrackedWallets(ctx context.Context, userID string) ([]*GetUserTrackedWalletsRow, error)
	GetUserWalletDetails(ctx context.Context, arg GetUserWalletDetailsParams) (*GetUserWalletDetailsRow, error)
	GetWalletsWithWatchers(ctx context.Context) ([]*GetWalletsWithWatchersRow, error)
	GetWatchersForWallet(ctx context.Context, walletAddress string) ([]*GetWatchersForWalletRow, error)
	GetWatchlistsByUserId(ctx context.Context, userID *string) ([]*Watchlist, error)
	HasWatchlist(ctx context.Context, arg HasWatchlistParams) (bool, error)
	HasWatchlistById(ctx context.Context, arg HasWatchlistByIdParams) (bool, error)
	IsTrackingWallet(ctx context.Context, arg IsTrackingWalletParams) (bool, error)
	IsTrackingWalletTelegram(ctx context.Context, arg IsTrackingWalletTelegramParams) (bool, error)
	TrackWalletTelegram(ctx context.Context, arg TrackWalletTelegramParams) (*TelegramUserWallet, error)
	UntrackWallet(ctx context.Context, arg UntrackWalletParams) error
	UntrackWalletTelegram(ctx context.Context, arg UntrackWalletTelegramParams) error
	UpdateTelegramUserPreference(ctx context.Context, arg UpdateTelegramUserPreferenceParams) (*TelegramUser, error)
	UpdateWalletPreferences(ctx context.Context, arg UpdateWalletPreferencesParams) (*UserWallet, error)
	UpsertTelegramUserWallet(ctx context.Context, arg UpsertTelegramUserWalletParams) (*TelegramUserWallet, error)
	UpsertUserWallet(ctx context.Context, arg UpsertUserWalletParams) (*UserWallet, error)
	WalletExists(ctx context.Context, address string) (bool, error)
}

var _ Querier = (*Queries)(nil)
